// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: email_verifications.sql

package gen

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createEmailVerification = `-- name: CreateEmailVerification :one
INSERT INTO email_verifications (user_id, code, expires_at)
VALUES ($1, $2, $3)
RETURNING id, user_id, code, expires_at, created_at
`

type CreateEmailVerificationParams struct {
	UserID    pgtype.UUID
	Code      int32
	ExpiresAt int64
}

func (q *Queries) CreateEmailVerification(ctx context.Context, arg CreateEmailVerificationParams) (EmailVerification, error) {
	row := q.db.QueryRow(ctx, createEmailVerification, arg.UserID, arg.Code, arg.ExpiresAt)
	var i EmailVerification
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Code,
		&i.ExpiresAt,
		&i.CreatedAt,
	)
	return i, err
}

const getEmailVerification = `-- name: GetEmailVerification :one
SELECT id, user_id, code, expires_at, created_at FROM email_verifications WHERE user_id = $1 AND code = $2
`

type GetEmailVerificationParams struct {
	UserID pgtype.UUID
	Code   int32
}

func (q *Queries) GetEmailVerification(ctx context.Context, arg GetEmailVerificationParams) (EmailVerification, error) {
	row := q.db.QueryRow(ctx, getEmailVerification, arg.UserID, arg.Code)
	var i EmailVerification
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Code,
		&i.ExpiresAt,
		&i.CreatedAt,
	)
	return i, err
}
