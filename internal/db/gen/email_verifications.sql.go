// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: email_verifications.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createEmailVerification = `-- name: CreateEmailVerification :one
INSERT INTO email_verifications (ev_user_id, ev_code, ev_expires_at)
VALUES ($1, $2, $3)
RETURNING ev_id, ev_user_id, ev_code, ev_expires_at, ev_created_at
`

type CreateEmailVerificationParams struct {
	EvUserID    pgtype.UUID
	EvCode      string
	EvExpiresAt pgtype.Timestamptz
}

func (q *Queries) CreateEmailVerification(ctx context.Context, arg CreateEmailVerificationParams) (EmailVerification, error) {
	row := q.db.QueryRow(ctx, createEmailVerification, arg.EvUserID, arg.EvCode, arg.EvExpiresAt)
	var i EmailVerification
	err := row.Scan(
		&i.EvID,
		&i.EvUserID,
		&i.EvCode,
		&i.EvExpiresAt,
		&i.EvCreatedAt,
	)
	return i, err
}

const getEmailVerification = `-- name: GetEmailVerification :one
SELECT ev_id, ev_user_id, ev_code, ev_expires_at, ev_created_at FROM email_verifications WHERE ev_user_id = $1 AND ev_code = $2
`

type GetEmailVerificationParams struct {
	EvUserID pgtype.UUID
	EvCode   string
}

func (q *Queries) GetEmailVerification(ctx context.Context, arg GetEmailVerificationParams) (EmailVerification, error) {
	row := q.db.QueryRow(ctx, getEmailVerification, arg.EvUserID, arg.EvCode)
	var i EmailVerification
	err := row.Scan(
		&i.EvID,
		&i.EvUserID,
		&i.EvCode,
		&i.EvExpiresAt,
		&i.EvCreatedAt,
	)
	return i, err
}
