// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: permissions.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createPermission = `-- name: CreatePermission :one
INSERT INTO permissions (permission_name, permission_description) VALUES ($1, $2) RETURNING permission_id, permission_name, permission_description, permission_created_at
`

type CreatePermissionParams struct {
	PermissionName        string
	PermissionDescription pgtype.Text
}

func (q *Queries) CreatePermission(ctx context.Context, arg CreatePermissionParams) (Permission, error) {
	row := q.db.QueryRow(ctx, createPermission, arg.PermissionName, arg.PermissionDescription)
	var i Permission
	err := row.Scan(
		&i.PermissionID,
		&i.PermissionName,
		&i.PermissionDescription,
		&i.PermissionCreatedAt,
	)
	return i, err
}

const getPermissionByName = `-- name: GetPermissionByName :one
SELECT permission_id, permission_name, permission_description, permission_created_at FROM permissions WHERE permission_name = $1
`

func (q *Queries) GetPermissionByName(ctx context.Context, permissionName string) (Permission, error) {
	row := q.db.QueryRow(ctx, getPermissionByName, permissionName)
	var i Permission
	err := row.Scan(
		&i.PermissionID,
		&i.PermissionName,
		&i.PermissionDescription,
		&i.PermissionCreatedAt,
	)
	return i, err
}
