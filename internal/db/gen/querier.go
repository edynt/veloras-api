// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	AssignPermissionToRole(ctx context.Context, arg AssignPermissionToRoleParams) error
	AssignRoleToUser(ctx context.Context, arg AssignRoleToUserParams) error
	CreateEmailVerification(ctx context.Context, arg CreateEmailVerificationParams) (EmailVerification, error)
	CreatePasswordReset(ctx context.Context, arg CreatePasswordResetParams) (PasswordReset, error)
	CreatePermission(ctx context.Context, arg CreatePermissionParams) (Permission, error)
	CreateRole(ctx context.Context, arg CreateRoleParams) (Role, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteSession(ctx context.Context, id int32) error
	DeleteUser(ctx context.Context, id pgtype.UUID) error
	GetEmailVerification(ctx context.Context, arg GetEmailVerificationParams) (EmailVerification, error)
	GetPasswordReset(ctx context.Context, arg GetPasswordResetParams) (PasswordReset, error)
	GetPermissionByName(ctx context.Context, name string) (Permission, error)
	GetPermissionsByRole(ctx context.Context, roleID pgtype.UUID) ([]Permission, error)
	GetRoleByName(ctx context.Context, name string) (Role, error)
	GetRolesByUser(ctx context.Context, userID pgtype.UUID) ([]Role, error)
	GetSession(ctx context.Context, id int32) (Session, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	VerifyUser(ctx context.Context, id pgtype.UUID) error
}

var _ Querier = (*Queries)(nil)
